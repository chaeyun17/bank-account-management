plugins {
	id 'org.springframework.boot' version '2.3.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "com.moowork.node" version "1.3.1"
}

group = 'org.yunfactory'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation 'org.modelmapper:modelmapper:2.3.7'
	implementation 'org.hibernate.validator:hibernate-validator:6.1.5.Final'

}

test {
	useJUnitPlatform()
}


node {
  distBaseUrl = 'https://nodejs.org/dist'
  download = false
  npmWorkDir = file("${project.buildDir}/frontend")

}

task appNpmInstall(type: NpmTask) {
    workingDir = file("${project.projectDir}/frontend")
    args = ["install"]
}

task npmBuild(type: NpmTask) {
    workingDir = file("${project.projectDir}/frontend")
    args = ['run', 'build']
}

task copyWebApp(type: Copy) {
    from "${project.projectDir}/frontend/dist"
    into "${project.projectDir}/src/main/resources/static/."
}

task buildFrontend(type: GradleBuild){
	tasks = ['appNpmInstall', 'npmBuild', 'copyWebApp']
}

bootJar{
	dependsOn buildFrontend
}
